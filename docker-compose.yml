version: '3.8'

services:
  # Main application with API
  app:
    build: .
    container_name: argaam-scraper-app
    ports:
      - "8000:8000"
    environment:
      - HEADLESS_MODE=True
      - LOG_LEVEL=INFO
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - UPDATE_INTERVAL_HOURS=24
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - argaam-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Scheduler service (runs scraping on schedule)
  scheduler:
    build: .
    container_name: argaam-scraper-scheduler
    command: python -m src.scheduler.scheduler --interval 24
    environment:
      - HEADLESS_MODE=True
      - LOG_LEVEL=INFO
      - UPDATE_INTERVAL_HOURS=24
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - argaam-network
    depends_on:
      - app

  # One-time scraper (run once and exit)
  scraper:
    build: .
    container_name: argaam-scraper-once
    command: python main.py --export-format all
    environment:
      - HEADLESS_MODE=True
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - argaam-network
    profiles:
      - manual

networks:
  argaam-network:
    driver: bridge

volumes:
  data:
  logs: